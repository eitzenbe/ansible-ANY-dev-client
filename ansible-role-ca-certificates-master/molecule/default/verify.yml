---
# Molecule Goss Tests

- name: Verify
  hosts: all
  become: true
  vars:
    goss_version: v0.3.16
    goss_arch: amd64
    goss_bin: /usr/local/bin/goss
    goss_sha256sum: 827e354b48f93bce933f5efcd1f00dc82569c42a179cf2d384b040d8a80bfbfb
    goss_url: "https://github.com/aelsabbahy/goss/releases/download/{{ goss_version }}/goss-linux-{{ goss_arch }}"
    goss_test_directory: /tmp/molecule/goss
    goss_format: documentation
    local_cacerts_map:
      debian: /usr/local/share/ca-certificates
      redhat: /etc/pki/ca-trust/source/anchors
    trust_cacerts_map:
      debian: /etc/ssl/certs/ca-certificates.crt
      redhat: /etc/ssl/certs/ca-bundle.trust.crt

  tasks:
    - name: Download and install Goss
      get_url:
        url: "{{ goss_url }}"
        dest: "{{ goss_bin }}"
        sha256sum: "{{ goss_sha256sum }}"
        mode: "u=rwx,go=rx"
      register: download_goss
      until: download_goss is succeeded
      retries: 3

    - name: Create Molecule directory for test files
      file:
        path: "{{ goss_test_directory }}"
        mode: "u=rwx,g=rx,o="
        state: directory

    - name: Find Goss tests on localhost
      find:
        paths: "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}"
        patterns:
          - "test[-.\\w]*.yml"
          - "test_host_{{ ansible_hostname }}[-.\\w]*.yml"
        excludes:
          - "test_host_(?!{{ ansible_hostname }})[-.\\w]*.yml"
        use_regex: true
      delegate_to: localhost
      register: test_files
      changed_when: false
      become: false

    - name: debug
      debug:
        msg: "{{ test_files.files }}"
        verbosity: 3

    - name: Copy Goss tests to remote
      copy:
        src: "{{ item.path }}"
        dest: "{{ goss_test_directory }}/{{ item.path | basename }}"
        mode: "u=rw,g=r,o="
      with_items:
        - "{{ test_files.files }}"
      loop_control:
        label: "{{ item.path | basename }}"

    - name: Register test files
      find:
        paths:
          - "{{ goss_test_directory }}"
        patterns:
          - "test_*.yml"
      register: test_files

    - block:
        - name: Execute Goss tests
          command: "{{ goss_bin }} -g {{ item }} validate --format {{ goss_format }}"
          environment:
            OS_FAMILY: "{{ ansible_os_family | lower }}"
            DISTRO_MAJOR_VERSION: "{{ ansible_distribution_major_version }}"
            LOCAL_CACERTS: "{{ local_cacerts_map[ansible_os_family | lower] }}"
            TRUST_CACERTS: "{{ trust_cacerts_map[ansible_os_family | lower] }}"
          register: test_results
          with_items: "{{ test_files.files | map(attribute='path') | list }}"
          loop_control:
            label: "{{ item | basename }}"
          failed_when: false

        - name: Display details about the Goss results
          debug:
            msg: "{{ item.stdout_lines }}"
          with_items: "{{ test_results.results }}"

        - name: Fail when tests fail
          fail:
            msg: "Goss failed to validate"
          when: item.rc != 0
          with_items: "{{ test_results.results }}"
      when: test_files is succeeded
